# This file contains common pin mappings for the Two Trees Sapphire
# Plus V1.1 (SP-5) printer (Robin Nano 1.2, all 2225 drivers at 32 microsteps).

# INSTRUCTIONS FOR COMPILING
# To use this config, the firmware should be compiled for the STM32F103.
# When running "make menuconfig", enable "extra low-level configuration setup",
# select the 28KiB bootloader, serial (on USART3 PB11/PB10) to use USB communication
# or serial (on USART1 PA10/PA9) to use direct UART connection with Raspberry trough wifi pins.
# Set "GPIO pins to set at micro-controller startup" to "!PC6,!PD13" to turn off display at startup.

# INSTRUCTIONS FOR FLASHING, THE SCRIPT IS COMPULSORY OR IT WON'T WORK!!!
# Note that the "make flash" command does not work with the Robin Nano!
# After running "make", run the following command in one row FROM THE KLIPPER FOLDER:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano35.bin
# Copy the file out/Robin_nano35.bin (if you can't find the file the script was not executed)
# to an SD card and then restart the printer with that SD card.
# If you removed the LCD screen rename the file to "Robin_nano43.bin" for correct flashing.

# See docs/Config_Reference.md for a description of parameters.
# Klipper backup


#[include BTTADXL345.cfg]
#[include PIS.cfg]
[include Microprobe.cfg]
[include v4lctls.cfg]
[exclude_object]
[include KAMP_Settings.cfg]


[output_pin LED_Strip]
pin: PB0
pwm: true
value: 1
shutdown_value: 0

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 50.8
shaper_type_y = mzv
shaper_freq_y = 43.6


[neopixel caselight]
pin: PC5
# #   The pin connected to the neopixel. This parameter must be
# #   provided.
chain_count: 9
# #   The number of Neopixel chips that are "daisy chained" to the
# #   provided pin. The default is 1 (which indicates only a single
# #   Neopixel is connected to the pin).
color_order: GRB
# #   Set the pixel order required by the LED hardware. Options are GRB,
# #   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
# #   Sets the initial LED color of the Neopixel. Each value should be
# #   between 0.0 and 1.0. The WHITE option is only available on RGBW
# #   LEDs. The default for each color is 0.#

[include caselight.cfg]
[include led_effects.cfg]
[include shell_command.cfg]
[include aux_fan.cfg]


########################
# TMC2208 configuration
########################

[tmc2208 stepper_x]
uart_pin: PD5
run_current: 1.15
#hold_current: 0.290
stealthchop_threshold: 0
interpolate: true

[tmc2208 stepper_y]
uart_pin: PD7
run_current: 1.15
#hold_current: 0.290
stealthchop_threshold: 0
interpolate: true

[tmc2208 stepper_z]
uart_pin: PD4
run_current: 0.750
#hold_current: 0.290
stealthchop_threshold: 0


[tmc2208 extruder]
uart_pin: PD9
run_current: 0.750
#hold_current: 0.330
stealthchop_threshold: 0

[stepper_x]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
microsteps: 32
rotation_distance: 40
endstop_pin: !PA15
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: PE0
dir_pin: !PB9
enable_pin: !PE1
microsteps: 32
rotation_distance: 40
endstop_pin: !PD2
position_endstop: 300
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#endstop_pin: !PC8
#position_endstop = 0.310
position_min: -5
position_max: 320

#[stepper_z1]
#step_pin: PA6
#dir_pin: !PA1
#enable_pin: !PA3
#microsteps: 32
#rotation_distance: 8

[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
gear_ratio: 50:17
rotation_distance: 23.15
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PE5
sensor_type: EPCOS 100K B57560G104F # Stock
sensor_pin: PC1
min_temp: 0
max_temp: 290
#control: pid
#pid_kp = 18.633
#pid_ki = 0.726
#pid_kd = 119.487

max_extrude_only_distance: 300.0
max_extrude_only_velocity: 50
pressure_advance: 0.04
pressure_advance_smooth_time: 0.05

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F # Stock
sensor_pin: PC0
min_temp: 0
max_temp: 130
control: pid
pid_kp = 70.130
pid_ki = 0.871
pid_kd = 1412.238
#control: pid #(old value)
#pid_Kp: 70.077
#pid_Ki: 1.657
#pid_Kd: 741.067

#[heater_fan extruder]
#pin: PB1

[fan]
pin: PC14

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_26003E000850304E47313020-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 600
max_accel: 10000
max_z_velocity: 15
max_z_accel: 100

[bed_screws]
screw1: 35,35
screw2: 275,35
screw3: 275,275
screw4: 35,275
#######################################################
####################### Macros ########################
#######################################################

[gcode_macro PAUSE_AFTER_D]
description: Trigger to pause the print after a further 'd' mm has been extruded
variable_end_d: 0 #create variable "END_D" which is associated with the PAUSE_AFTER_D gcode macro
gcode:
  {% set d_start = printer.print_stats.filament_used|float %} #starting point is whatever the filament used is when PAUSE_AFTER_D is called
  {% set d_end = (d_start + params.D|float)|float %} #end point is start + D parameter
  SET_GCODE_VARIABLE MACRO=PAUSE_AFTER_D VARIABLE=end_d VALUE={d_end} #write the end value to the END_D gcode variable to access later
  M117 Pause at {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
  UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #trigger the delayed gcode below after 1 second

[delayed_gcode PAUSE_AT_D]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
  {% set d_current = printer.print_stats.filament_used|float %} #get the current filament used
  {% if d_current < printer["gcode_macro PAUSE_AFTER_D"].end_d %} #if we aren't at the stopping point
    M117 Stopping {d_current|round(2)} {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #restart the timer on the delayed gcode
  {% else %}
    PAUSE
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=0 #set the delayed gcode duration back to zero so it doesn't keep triggering
  {% endif %}

[filament_switch_sensor RUNOUT]
pause_on_runout: false
runout_gcode:
  #positions here are in printer coordinates eg if you have a 300mm bed and your sensor is 7cm past the 
  #max y position then y_offset should be 370
  {% set x_offset = 150 %}  #approximate x location of the runout sensor
  {% set y_offset = 370 %}    #approximate y location of the runout sensor
  #z location not used but this can be easily extended to include a z offset if needed

  {% set current_x = printer.toolhead.position.x %}
  {% set current_y = printer.toolhead.position.y %}

  {% set distance = ((x_offset - current_x)**2 + (y_offset - current_y)**2)**(1/2) %}
  
  PAUSE_AFTER_D D={800}
  
insert_gcode:
event_delay: 3.0
pause_delay: 0.5
switch_pin: PA4



[gcode_macro Head_Front]
gcode:
    SET_LED_EFFECT EFFECT=ready
    G28
    G1 X150 Y0 Z100 F8000

[gcode_macro Head_cleaning]
gcode:
    SET_LED_EFFECT EFFECT=ready
    G28
    G1 X150 Y0 Z100 F8000
    M109 S220
    
[gcode_macro Calibrate_HEATER ]
gcode:
    SET_LED_EFFECT EFFECT=PID_HEATER
    M106 S127.5
    PID_CALIBRATE HEATER=extruder TARGET=205
    save_config
    M106 S0

[gcode_macro Calibrate_BED]
gcode:
    SET_LED_EFFECT EFFECT=PID_BED
    PID_CALIBRATE HEATER=heater_bed TARGET=60
    save_config
    
[gcode_macro LOAD_FILAMENT]
variable_load_distance:  140
variable_purge_distance:  20
gcode:
    SET_LED_EFFECT EFFECT=unloading STOP=1
    SET_LED_EFFECT EFFECT=ready STOP=1
    SET_LED_EFFECT EFFECT=loading
    G1 X150 Y0 Z100 F6000
    {% set speed = params.SPEED|default(100) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 10 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    G1 E-3
    RESTORE_GCODE_STATE NAME=load_state
    SET_LED_EFFECT EFFECT=loading stop=1
    SET_LED_EFFECT EFFECT=ready

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  140
variable_purge_distance:  20
gcode:
    SET_LED_EFFECT EFFECT=ready STOP=1
    SET_LED_EFFECT EFFECT=unloading
    G1 X150 Y0 Z100 F6000
    {% set speed = params.SPEED|default(100) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 10 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state
    SET_LED_EFFECT EFFECT=unloading stop=1
    SET_LED_EFFECT EFFECT=ready

[gcode_macro START_PRINT]
gcode:
    SET_LED_EFFECT EFFECT=ready stop=1
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    # Starts nozzle preheating to 150
  
    CASELIGHT_HEATING
    M140 S{BED_TEMP}
    # M109 S100
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=-1.4
    # Home the printer
    G28
    SET_LED_EFFECT EFFECT=ready stop=1
    CASELIGHT_HEATING
    # BED_MESH_PROFILE Load=default
    # SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE 
    # Move the nozzle near the bed
    G1 Y260 X5.0 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z1.0 F300
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Reset Extruder
    CASELIGHT_ON
    G92 E0 
    # Move to Prime position
    # G1 Y260 X5.0 Z0.28 F5000.0 ; Move to start position
    G1 Y60 X5.0 Z0.28 F1500.0 E15 ; Draw the first line
    G1 Y60 X5.3 Z0.28 F5000.0 ; Move to the side a little
    G1 Y180 X5.3 Z0.28 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z axis up

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    M107
    # Move nozzle away from print while retracting
    G91
    G1 X-5 Y-5 E-3 F5000
    # Raise nozzle by 10mm
    G1 Z10 F5000
    G90
    G28 X Y
    # Disable steppers
    M84
    # M106 P2 S100
    CASELIGHT_OFF



    

[static_digital_output reset_display]
pins: !PC6, !PD13

[include mainsail.cfg]

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 0.310
#*#
#*# [input_shaper]
#*#
#*# [heater_bed]
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.141
#*# pid_ki = 1.251
#*# pid_kd = 158.290
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.039375, -0.046875, -0.056250, -0.102500, -0.120000, -0.086250, -0.056250, -0.056875, -0.071250, -0.094375
#*# 	-0.071875, -0.098750, -0.096250, -0.135000, -0.143750, -0.150000, -0.102500, -0.073750, -0.077500, -0.093125
#*# 	-0.090625, -0.121250, -0.110625, -0.137500, -0.153750, -0.119375, -0.061875, -0.077500, -0.093750, -0.102500
#*# 	-0.116875, -0.140625, -0.131250, -0.164375, -0.171875, -0.148750, -0.114375, -0.081875, -0.094375, -0.106250
#*# 	-0.118125, -0.141250, -0.130625, -0.171250, -0.177500, -0.156250, -0.142500, -0.084375, -0.101250, -0.113750
#*# 	-0.126875, -0.140625, -0.143125, -0.166250, -0.175000, -0.185625, -0.172500, -0.131250, -0.096875, -0.108125
#*# 	-0.109375, -0.118125, -0.120000, -0.152500, -0.153750, -0.181250, -0.181875, -0.144375, -0.101250, -0.096250
#*# 	-0.089375, -0.091875, -0.096875, -0.128125, -0.140000, -0.155000, -0.149375, -0.130000, -0.118750, -0.069375
#*# 	-0.059375, -0.050625, -0.063125, -0.079375, -0.096875, -0.105000, -0.101875, -0.103125, -0.092500, -0.076875
#*# 	-0.041250, -0.036875, -0.053125, -0.099375, -0.106250, -0.096875, -0.085625, -0.070000, -0.067500, -0.085000
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 289.99
#*# min_y = 40.0
#*# max_y = 294.97
